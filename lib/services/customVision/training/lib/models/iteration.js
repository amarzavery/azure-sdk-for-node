/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Iteration model to be sent over JSON
 *
 */
class Iteration {
  /**
   * Create a Iteration.
   * @member {uuid} [id] Gets the id of the iteration
   * @member {string} [name] Gets or sets the name of the iteration
   * @member {boolean} [isDefault] Gets or sets a value indicating whether the
   * iteration is the default iteration for the project
   * @member {string} [status] Gets the current iteration status
   * @member {date} [created] Gets the time this iteration was completed
   * @member {date} [lastModified] Gets the time this iteration was last
   * modified
   * @member {date} [trainedAt] Gets the time this iteration was last modified
   * @member {uuid} [projectId] Gets the project id of the iteration
   * @member {boolean} [exportable] Whether the iteration can be exported to
   * another format for download
   * @member {uuid} [domainId] Get or sets a guid of the domain the iteration
   * has been trained on
   * @member {string} [classificationType] Gets the classification type of the
   * project. Possible values include: 'Multiclass', 'Multilabel'
   */
  constructor() {
  }

  /**
   * Defines the metadata of Iteration
   *
   * @returns {object} metadata of Iteration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Iteration',
      type: {
        name: 'Composite',
        className: 'Iteration',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          isDefault: {
            required: false,
            serializedName: 'isDefault',
            type: {
              name: 'Boolean'
            }
          },
          status: {
            required: false,
            readOnly: true,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          created: {
            required: false,
            readOnly: true,
            serializedName: 'created',
            type: {
              name: 'DateTime'
            }
          },
          lastModified: {
            required: false,
            readOnly: true,
            serializedName: 'lastModified',
            type: {
              name: 'DateTime'
            }
          },
          trainedAt: {
            required: false,
            readOnly: true,
            serializedName: 'trainedAt',
            type: {
              name: 'DateTime'
            }
          },
          projectId: {
            required: false,
            readOnly: true,
            serializedName: 'projectId',
            type: {
              name: 'String'
            }
          },
          exportable: {
            required: false,
            readOnly: true,
            serializedName: 'exportable',
            type: {
              name: 'Boolean'
            }
          },
          domainId: {
            required: false,
            readOnly: true,
            serializedName: 'domainId',
            type: {
              name: 'String'
            }
          },
          classificationType: {
            required: false,
            readOnly: true,
            serializedName: 'classificationType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Iteration;
