/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as moment from 'moment';
import * as models from '../models';


/**
 * @class
 * Clusters
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the KustoManagementClient.
 */
export interface Clusters {


    /**
     * Gets a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Cluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Cluster>>;

    /**
     * Gets a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Cluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Cluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Cluster} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Cluster>;
    get(resourceGroupName: string, clusterName: string, callback: ServiceCallback<models.Cluster>): void;
    get(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Cluster>): void;


    /**
     * Create or update a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} parameters The Kusto cluster parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {object} parameters.sku The SKU of the cluster.
     *
     * @param {string} parameters.sku.name SKU name. Possible values include:
     * 'D13_v2', 'D14_v2', 'L8', 'L16', 'D11_v2', 'D12_v2', 'L4'
     *
     * @param {number} [parameters.sku.capacity] SKU capacity.
     *
     * @param {array} [parameters.trustedExternalTenants] The cluster's external
     * tenants.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} parameters.location The geo-location where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Cluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, parameters: models.Cluster, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Cluster>>;

    /**
     * Create or update a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} parameters The Kusto cluster parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {object} parameters.sku The SKU of the cluster.
     *
     * @param {string} parameters.sku.name SKU name. Possible values include:
     * 'D13_v2', 'D14_v2', 'L8', 'L16', 'D11_v2', 'D12_v2', 'L4'
     *
     * @param {number} [parameters.sku.capacity] SKU capacity.
     *
     * @param {array} [parameters.trustedExternalTenants] The cluster's external
     * tenants.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} parameters.location The geo-location where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Cluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Cluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Cluster} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.Cluster, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Cluster>;
    createOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.Cluster, callback: ServiceCallback<models.Cluster>): void;
    createOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.Cluster, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Cluster>): void;


    /**
     * Update a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} parameters The Kusto cluster parameters supplied to the
     * Update operation.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.sku] The SKU of the cluster.
     *
     * @param {string} parameters.sku.name SKU name. Possible values include:
     * 'D13_v2', 'D14_v2', 'L8', 'L16', 'D11_v2', 'D12_v2', 'L4'
     *
     * @param {number} [parameters.sku.capacity] SKU capacity.
     *
     * @param {array} [parameters.trustedExternalTenants] The cluster's external
     * tenants.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Cluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, parameters: models.ClusterUpdate, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Cluster>>;

    /**
     * Update a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} parameters The Kusto cluster parameters supplied to the
     * Update operation.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.sku] The SKU of the cluster.
     *
     * @param {string} parameters.sku.name SKU name. Possible values include:
     * 'D13_v2', 'D14_v2', 'L8', 'L16', 'D11_v2', 'D12_v2', 'L4'
     *
     * @param {number} [parameters.sku.capacity] SKU capacity.
     *
     * @param {array} [parameters.trustedExternalTenants] The cluster's external
     * tenants.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Cluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Cluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Cluster} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, clusterName: string, parameters: models.ClusterUpdate, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Cluster>;
    update(resourceGroupName: string, clusterName: string, parameters: models.ClusterUpdate, callback: ServiceCallback<models.Cluster>): void;
    update(resourceGroupName: string, clusterName: string, parameters: models.ClusterUpdate, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Cluster>): void;


    /**
     * Deletes a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, clusterName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Stops a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    stopWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Stops a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    stop(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    stop(resourceGroupName: string, clusterName: string, callback: ServiceCallback<void>): void;
    stop(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Starts a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    startWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Starts a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    start(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    start(resourceGroupName: string, clusterName: string, callback: ServiceCallback<void>): void;
    start(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all Kusto clusters within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ClusterListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ClusterListResult>>;

    /**
     * Lists all Kusto clusters within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ClusterListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ClusterListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ClusterListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ClusterListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.ClusterListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ClusterListResult>): void;


    /**
     * Lists all Kusto clusters within a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ClusterListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ClusterListResult>>;

    /**
     * Lists all Kusto clusters within a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ClusterListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ClusterListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ClusterListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ClusterListResult>;
    list(callback: ServiceCallback<models.ClusterListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ClusterListResult>): void;


    /**
     * Lists eligible SKUs for Kusto resource provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ListSkusResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listSkusWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ListSkusResult>>;

    /**
     * Lists eligible SKUs for Kusto resource provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ListSkusResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ListSkusResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ListSkusResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listSkus(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ListSkusResult>;
    listSkus(callback: ServiceCallback<models.ListSkusResult>): void;
    listSkus(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ListSkusResult>): void;


    /**
     * Checks that the cluster name is valid and is not already in use.
     *
     * @param {string} location Azure location.
     *
     * @param {object} clusterName The name of the cluster.
     *
     * @param {string} clusterName.name Cluster name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CheckNameResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkNameAvailabilityWithHttpOperationResponse(location: string, clusterName: models.ClusterCheckNameRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CheckNameResult>>;

    /**
     * Checks that the cluster name is valid and is not already in use.
     *
     * @param {string} location Azure location.
     *
     * @param {object} clusterName The name of the cluster.
     *
     * @param {string} clusterName.name Cluster name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CheckNameResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CheckNameResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CheckNameResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkNameAvailability(location: string, clusterName: models.ClusterCheckNameRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CheckNameResult>;
    checkNameAvailability(location: string, clusterName: models.ClusterCheckNameRequest, callback: ServiceCallback<models.CheckNameResult>): void;
    checkNameAvailability(location: string, clusterName: models.ClusterCheckNameRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CheckNameResult>): void;


    /**
     * Returns the SKUs available for the provided resource.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ListResourceSkusResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listSkusByResourceWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ListResourceSkusResult>>;

    /**
     * Returns the SKUs available for the provided resource.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ListResourceSkusResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ListResourceSkusResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ListResourceSkusResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listSkusByResource(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ListResourceSkusResult>;
    listSkusByResource(resourceGroupName: string, clusterName: string, callback: ServiceCallback<models.ListResourceSkusResult>): void;
    listSkusByResource(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ListResourceSkusResult>): void;


    /**
     * Create or update a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} parameters The Kusto cluster parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {object} parameters.sku The SKU of the cluster.
     *
     * @param {string} parameters.sku.name SKU name. Possible values include:
     * 'D13_v2', 'D14_v2', 'L8', 'L16', 'D11_v2', 'D12_v2', 'L4'
     *
     * @param {number} [parameters.sku.capacity] SKU capacity.
     *
     * @param {array} [parameters.trustedExternalTenants] The cluster's external
     * tenants.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} parameters.location The geo-location where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Cluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, parameters: models.Cluster, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Cluster>>;

    /**
     * Create or update a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} parameters The Kusto cluster parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {object} parameters.sku The SKU of the cluster.
     *
     * @param {string} parameters.sku.name SKU name. Possible values include:
     * 'D13_v2', 'D14_v2', 'L8', 'L16', 'D11_v2', 'D12_v2', 'L4'
     *
     * @param {number} [parameters.sku.capacity] SKU capacity.
     *
     * @param {array} [parameters.trustedExternalTenants] The cluster's external
     * tenants.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} parameters.location The geo-location where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Cluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Cluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Cluster} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.Cluster, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Cluster>;
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.Cluster, callback: ServiceCallback<models.Cluster>): void;
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.Cluster, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Cluster>): void;


    /**
     * Update a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} parameters The Kusto cluster parameters supplied to the
     * Update operation.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.sku] The SKU of the cluster.
     *
     * @param {string} parameters.sku.name SKU name. Possible values include:
     * 'D13_v2', 'D14_v2', 'L8', 'L16', 'D11_v2', 'D12_v2', 'L4'
     *
     * @param {number} [parameters.sku.capacity] SKU capacity.
     *
     * @param {array} [parameters.trustedExternalTenants] The cluster's external
     * tenants.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Cluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, parameters: models.ClusterUpdate, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Cluster>>;

    /**
     * Update a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} parameters The Kusto cluster parameters supplied to the
     * Update operation.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.sku] The SKU of the cluster.
     *
     * @param {string} parameters.sku.name SKU name. Possible values include:
     * 'D13_v2', 'D14_v2', 'L8', 'L16', 'D11_v2', 'D12_v2', 'L4'
     *
     * @param {number} [parameters.sku.capacity] SKU capacity.
     *
     * @param {array} [parameters.trustedExternalTenants] The cluster's external
     * tenants.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Cluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Cluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Cluster} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, parameters: models.ClusterUpdate, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Cluster>;
    beginUpdate(resourceGroupName: string, clusterName: string, parameters: models.ClusterUpdate, callback: ServiceCallback<models.Cluster>): void;
    beginUpdate(resourceGroupName: string, clusterName: string, parameters: models.ClusterUpdate, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Cluster>): void;


    /**
     * Deletes a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, clusterName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Stops a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginStopWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Stops a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginStop(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginStop(resourceGroupName: string, clusterName: string, callback: ServiceCallback<void>): void;
    beginStop(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Starts a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginStartWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Starts a Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginStart(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginStart(resourceGroupName: string, clusterName: string, callback: ServiceCallback<void>): void;
    beginStart(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Databases
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the KustoManagementClient.
 */
export interface Databases {


    /**
     * Checks that the database name is valid and is not already in use.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} databaseName The name of the database.
     *
     * @param {string} databaseName.name Database name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CheckNameResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkNameAvailabilityWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: models.DatabaseCheckNameRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CheckNameResult>>;

    /**
     * Checks that the database name is valid and is not already in use.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} databaseName The name of the database.
     *
     * @param {string} databaseName.name Database name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CheckNameResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CheckNameResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CheckNameResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, databaseName: models.DatabaseCheckNameRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CheckNameResult>;
    checkNameAvailability(resourceGroupName: string, clusterName: string, databaseName: models.DatabaseCheckNameRequest, callback: ServiceCallback<models.CheckNameResult>): void;
    checkNameAvailability(resourceGroupName: string, clusterName: string, databaseName: models.DatabaseCheckNameRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CheckNameResult>): void;


    /**
     * Returns the list of databases of the given Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DatabaseListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByClusterWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DatabaseListResult>>;

    /**
     * Returns the list of databases of the given Kusto cluster.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DatabaseListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DatabaseListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DatabaseListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByCluster(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DatabaseListResult>;
    listByCluster(resourceGroupName: string, clusterName: string, callback: ServiceCallback<models.DatabaseListResult>): void;
    listByCluster(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DatabaseListResult>): void;


    /**
     * Returns a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Database>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Database>>;

    /**
     * Returns a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Database} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Database} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Database} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Database>;
    get(resourceGroupName: string, clusterName: string, databaseName: string, callback: ServiceCallback<models.Database>): void;
    get(resourceGroupName: string, clusterName: string, databaseName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Database>): void;


    /**
     * Creates or updates a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The database parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {moment.duration} [parameters.softDeletePeriod] The time the data
     * should be kept before it stops being accessible to queries in TimeSpan.
     *
     * @param {moment.duration} [parameters.hotCachePeriod] The time the data that
     * should be kept in cache for fast queries in TimeSpan.
     *
     * @param {object} [parameters.statistics] The statistics of the database.
     *
     * @param {number} [parameters.statistics.size] The database size - the total
     * size of compressed data and index in bytes.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Database>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.Database, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Database>>;

    /**
     * Creates or updates a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The database parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {moment.duration} [parameters.softDeletePeriod] The time the data
     * should be kept before it stops being accessible to queries in TimeSpan.
     *
     * @param {moment.duration} [parameters.hotCachePeriod] The time the data that
     * should be kept in cache for fast queries in TimeSpan.
     *
     * @param {object} [parameters.statistics] The statistics of the database.
     *
     * @param {number} [parameters.statistics.size] The database size - the total
     * size of compressed data and index in bytes.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Database} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Database} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Database} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.Database, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Database>;
    createOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.Database, callback: ServiceCallback<models.Database>): void;
    createOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.Database, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Database>): void;


    /**
     * Updates a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The database parameters supplied to the Update
     * operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {moment.duration} [parameters.softDeletePeriod] The time the data
     * should be kept before it stops being accessible to queries in TimeSpan.
     *
     * @param {moment.duration} [parameters.hotCachePeriod] The time the data that
     * should be kept in cache for fast queries in TimeSpan.
     *
     * @param {object} [parameters.statistics] The statistics of the database.
     *
     * @param {number} [parameters.statistics.size] The database size - the total
     * size of compressed data and index in bytes.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Database>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DatabaseUpdate, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Database>>;

    /**
     * Updates a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The database parameters supplied to the Update
     * operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {moment.duration} [parameters.softDeletePeriod] The time the data
     * should be kept before it stops being accessible to queries in TimeSpan.
     *
     * @param {moment.duration} [parameters.hotCachePeriod] The time the data that
     * should be kept in cache for fast queries in TimeSpan.
     *
     * @param {object} [parameters.statistics] The statistics of the database.
     *
     * @param {number} [parameters.statistics.size] The database size - the total
     * size of compressed data and index in bytes.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Database} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Database} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Database} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DatabaseUpdate, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Database>;
    update(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DatabaseUpdate, callback: ServiceCallback<models.Database>): void;
    update(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DatabaseUpdate, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Database>): void;


    /**
     * Deletes the database with the given name.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the database with the given name.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Returns a list of database principals of the given Kusto cluster and
     * database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DatabasePrincipalListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listPrincipalsWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DatabasePrincipalListResult>>;

    /**
     * Returns a list of database principals of the given Kusto cluster and
     * database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DatabasePrincipalListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DatabasePrincipalListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DatabasePrincipalListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listPrincipals(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DatabasePrincipalListResult>;
    listPrincipals(resourceGroupName: string, clusterName: string, databaseName: string, callback: ServiceCallback<models.DatabasePrincipalListResult>): void;
    listPrincipals(resourceGroupName: string, clusterName: string, databaseName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DatabasePrincipalListResult>): void;


    /**
     * Add Database principals permissions.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} databasePrincipalsToAdd List of database principals to add.
     *
     * @param {array} [databasePrincipalsToAdd.value] The list of Kusto database
     * principals.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DatabasePrincipalListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    addPrincipalsWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToAdd: models.DatabasePrincipalListRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DatabasePrincipalListResult>>;

    /**
     * Add Database principals permissions.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} databasePrincipalsToAdd List of database principals to add.
     *
     * @param {array} [databasePrincipalsToAdd.value] The list of Kusto database
     * principals.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DatabasePrincipalListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DatabasePrincipalListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DatabasePrincipalListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    addPrincipals(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToAdd: models.DatabasePrincipalListRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DatabasePrincipalListResult>;
    addPrincipals(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToAdd: models.DatabasePrincipalListRequest, callback: ServiceCallback<models.DatabasePrincipalListResult>): void;
    addPrincipals(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToAdd: models.DatabasePrincipalListRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DatabasePrincipalListResult>): void;


    /**
     * Remove Database principals permissions.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} databasePrincipalsToRemove List of database principals to
     * remove.
     *
     * @param {array} [databasePrincipalsToRemove.value] The list of Kusto database
     * principals.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DatabasePrincipalListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    removePrincipalsWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToRemove: models.DatabasePrincipalListRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DatabasePrincipalListResult>>;

    /**
     * Remove Database principals permissions.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} databasePrincipalsToRemove List of database principals to
     * remove.
     *
     * @param {array} [databasePrincipalsToRemove.value] The list of Kusto database
     * principals.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DatabasePrincipalListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DatabasePrincipalListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DatabasePrincipalListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    removePrincipals(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToRemove: models.DatabasePrincipalListRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DatabasePrincipalListResult>;
    removePrincipals(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToRemove: models.DatabasePrincipalListRequest, callback: ServiceCallback<models.DatabasePrincipalListResult>): void;
    removePrincipals(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToRemove: models.DatabasePrincipalListRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DatabasePrincipalListResult>): void;


    /**
     * Creates or updates a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The database parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {moment.duration} [parameters.softDeletePeriod] The time the data
     * should be kept before it stops being accessible to queries in TimeSpan.
     *
     * @param {moment.duration} [parameters.hotCachePeriod] The time the data that
     * should be kept in cache for fast queries in TimeSpan.
     *
     * @param {object} [parameters.statistics] The statistics of the database.
     *
     * @param {number} [parameters.statistics.size] The database size - the total
     * size of compressed data and index in bytes.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Database>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.Database, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Database>>;

    /**
     * Creates or updates a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The database parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {moment.duration} [parameters.softDeletePeriod] The time the data
     * should be kept before it stops being accessible to queries in TimeSpan.
     *
     * @param {moment.duration} [parameters.hotCachePeriod] The time the data that
     * should be kept in cache for fast queries in TimeSpan.
     *
     * @param {object} [parameters.statistics] The statistics of the database.
     *
     * @param {number} [parameters.statistics.size] The database size - the total
     * size of compressed data and index in bytes.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Database} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Database} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Database} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.Database, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Database>;
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.Database, callback: ServiceCallback<models.Database>): void;
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.Database, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Database>): void;


    /**
     * Updates a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The database parameters supplied to the Update
     * operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {moment.duration} [parameters.softDeletePeriod] The time the data
     * should be kept before it stops being accessible to queries in TimeSpan.
     *
     * @param {moment.duration} [parameters.hotCachePeriod] The time the data that
     * should be kept in cache for fast queries in TimeSpan.
     *
     * @param {object} [parameters.statistics] The statistics of the database.
     *
     * @param {number} [parameters.statistics.size] The database size - the total
     * size of compressed data and index in bytes.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Database>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DatabaseUpdate, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Database>>;

    /**
     * Updates a database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The database parameters supplied to the Update
     * operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {moment.duration} [parameters.softDeletePeriod] The time the data
     * should be kept before it stops being accessible to queries in TimeSpan.
     *
     * @param {moment.duration} [parameters.hotCachePeriod] The time the data that
     * should be kept in cache for fast queries in TimeSpan.
     *
     * @param {object} [parameters.statistics] The statistics of the database.
     *
     * @param {number} [parameters.statistics.size] The database size - the total
     * size of compressed data and index in bytes.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Database} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Database} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Database} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DatabaseUpdate, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Database>;
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DatabaseUpdate, callback: ServiceCallback<models.Database>): void;
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DatabaseUpdate, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Database>): void;


    /**
     * Deletes the database with the given name.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the database with the given name.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * DataConnections
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the KustoManagementClient.
 */
export interface DataConnections {


    /**
     * Returns the list of data connections of the given Kusto database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DataConnectionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByDatabaseWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DataConnectionListResult>>;

    /**
     * Returns the list of data connections of the given Kusto database.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DataConnectionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DataConnectionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DataConnectionListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByDatabase(resourceGroupName: string, clusterName: string, databaseName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DataConnectionListResult>;
    listByDatabase(resourceGroupName: string, clusterName: string, databaseName: string, callback: ServiceCallback<models.DataConnectionListResult>): void;
    listByDatabase(resourceGroupName: string, clusterName: string, databaseName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataConnectionListResult>): void;


    /**
     * Checks that the data connection parameters are valid.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.dataConnectionName] The name of the data
     * connection.
     *
     * @param {object} [parameters.properties] The data connection properties to
     * validate.
     *
     * @param {string} [parameters.properties.location] Resource location.
     *
     * @param {string} parameters.properties.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DataConnectionValidationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    dataConnectionValidationMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DataConnectionValidation, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DataConnectionValidationListResult>>;

    /**
     * Checks that the data connection parameters are valid.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.dataConnectionName] The name of the data
     * connection.
     *
     * @param {object} [parameters.properties] The data connection properties to
     * validate.
     *
     * @param {string} [parameters.properties.location] Resource location.
     *
     * @param {string} parameters.properties.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DataConnectionValidationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DataConnectionValidationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DataConnectionValidationListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    dataConnectionValidationMethod(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DataConnectionValidation, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DataConnectionValidationListResult>;
    dataConnectionValidationMethod(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DataConnectionValidation, callback: ServiceCallback<models.DataConnectionValidationListResult>): void;
    dataConnectionValidationMethod(resourceGroupName: string, clusterName: string, databaseName: string, parameters: models.DataConnectionValidation, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataConnectionValidationListResult>): void;


    /**
     * Returns a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DataConnection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DataConnection>>;

    /**
     * Returns a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DataConnection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DataConnection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DataConnection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DataConnection>;
    get(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, callback: ServiceCallback<models.DataConnection>): void;
    get(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataConnection>): void;


    /**
     * Creates or updates a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DataConnection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DataConnection>>;

    /**
     * Creates or updates a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DataConnection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DataConnection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DataConnection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DataConnection>;
    createOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, callback: ServiceCallback<models.DataConnection>): void;
    createOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataConnection>): void;


    /**
     * Updates a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * Update operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DataConnection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DataConnection>>;

    /**
     * Updates a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * Update operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DataConnection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DataConnection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DataConnection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DataConnection>;
    update(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, callback: ServiceCallback<models.DataConnection>): void;
    update(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataConnection>): void;


    /**
     * Deletes the data connection with the given name.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the data connection with the given name.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates or updates a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DataConnection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DataConnection>>;

    /**
     * Creates or updates a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * CreateOrUpdate operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DataConnection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DataConnection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DataConnection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DataConnection>;
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, callback: ServiceCallback<models.DataConnection>): void;
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataConnection>): void;


    /**
     * Updates a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * Update operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DataConnection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DataConnection>>;

    /**
     * Updates a data connection.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} parameters The data connection parameters supplied to the
     * Update operation.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DataConnection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DataConnection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DataConnection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DataConnection>;
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, callback: ServiceCallback<models.DataConnection>): void;
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: models.DataConnection, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataConnection>): void;


    /**
     * Deletes the data connection with the given name.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the data connection with the given name.
     *
     * @param {string} resourceGroupName The name of the resource group containing
     * the Kusto cluster.
     *
     * @param {string} clusterName The name of the Kusto cluster.
     *
     * @param {string} databaseName The name of the database in the Kusto cluster.
     *
     * @param {string} dataConnectionName The name of the data connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the KustoManagementClient.
 */
export interface Operations {


    /**
     * Lists available operations for the Microsoft.Kusto provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists available operations for the Microsoft.Kusto provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * Lists available operations for the Microsoft.Kusto provider.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists available operations for the Microsoft.Kusto provider.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}
