/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Accounts
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the MapsManagementClient.
 */
export interface Accounts {


    /**
     * Create or update a Maps Account. A Maps Account holds the keys which allow
     * access to the Maps REST APIs.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} mapsAccountCreateParameters The new or updated parameters
     * for the Maps Account.
     *
     * @param {string} mapsAccountCreateParameters.location The location of the
     * resource.
     *
     * @param {object} [mapsAccountCreateParameters.tags] Gets or sets a list of
     * key value pairs that describe the resource. These tags can be used in
     * viewing and grouping this resource (across resource groups). A maximum of 15
     * tags can be provided for a resource. Each tag must have a key no greater
     * than 128 characters and value no greater than 256 characters.
     *
     * @param {object} mapsAccountCreateParameters.sku The SKU of this account.
     *
     * @param {string} mapsAccountCreateParameters.sku.name The name of the SKU, in
     * standard format (such as S0).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MapsAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, accountName: string, mapsAccountCreateParameters: models.MapsAccountCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MapsAccount>>;

    /**
     * Create or update a Maps Account. A Maps Account holds the keys which allow
     * access to the Maps REST APIs.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} mapsAccountCreateParameters The new or updated parameters
     * for the Maps Account.
     *
     * @param {string} mapsAccountCreateParameters.location The location of the
     * resource.
     *
     * @param {object} [mapsAccountCreateParameters.tags] Gets or sets a list of
     * key value pairs that describe the resource. These tags can be used in
     * viewing and grouping this resource (across resource groups). A maximum of 15
     * tags can be provided for a resource. Each tag must have a key no greater
     * than 128 characters and value no greater than 256 characters.
     *
     * @param {object} mapsAccountCreateParameters.sku The SKU of this account.
     *
     * @param {string} mapsAccountCreateParameters.sku.name The name of the SKU, in
     * standard format (such as S0).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MapsAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MapsAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MapsAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, mapsAccountCreateParameters: models.MapsAccountCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MapsAccount>;
    createOrUpdate(resourceGroupName: string, accountName: string, mapsAccountCreateParameters: models.MapsAccountCreateParameters, callback: ServiceCallback<models.MapsAccount>): void;
    createOrUpdate(resourceGroupName: string, accountName: string, mapsAccountCreateParameters: models.MapsAccountCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MapsAccount>): void;


    /**
     * Updates a Maps Account. Only a subset of the parameters may be updated after
     * creation, such as Sku and Tags.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} mapsAccountUpdateParameters The updated parameters for the
     * Maps Account.
     *
     * @param {object} [mapsAccountUpdateParameters.tags] Gets or sets a list of
     * key value pairs that describe the resource. These tags can be used in
     * viewing and grouping this resource (across resource groups). A maximum of 15
     * tags can be provided for a resource. Each tag must have a key no greater
     * than 128 characters and value no greater than 256 characters.
     *
     * @param {object} [mapsAccountUpdateParameters.sku] The SKU of this account.
     *
     * @param {string} mapsAccountUpdateParameters.sku.name The name of the SKU, in
     * standard format (such as S0).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MapsAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, mapsAccountUpdateParameters: models.MapsAccountUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MapsAccount>>;

    /**
     * Updates a Maps Account. Only a subset of the parameters may be updated after
     * creation, such as Sku and Tags.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} mapsAccountUpdateParameters The updated parameters for the
     * Maps Account.
     *
     * @param {object} [mapsAccountUpdateParameters.tags] Gets or sets a list of
     * key value pairs that describe the resource. These tags can be used in
     * viewing and grouping this resource (across resource groups). A maximum of 15
     * tags can be provided for a resource. Each tag must have a key no greater
     * than 128 characters and value no greater than 256 characters.
     *
     * @param {object} [mapsAccountUpdateParameters.sku] The SKU of this account.
     *
     * @param {string} mapsAccountUpdateParameters.sku.name The name of the SKU, in
     * standard format (such as S0).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MapsAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MapsAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MapsAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, accountName: string, mapsAccountUpdateParameters: models.MapsAccountUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MapsAccount>;
    update(resourceGroupName: string, accountName: string, mapsAccountUpdateParameters: models.MapsAccountUpdateParameters, callback: ServiceCallback<models.MapsAccount>): void;
    update(resourceGroupName: string, accountName: string, mapsAccountUpdateParameters: models.MapsAccountUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MapsAccount>): void;


    /**
     * Delete a Maps Account.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete a Maps Account.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Get a Maps Account.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MapsAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MapsAccount>>;

    /**
     * Get a Maps Account.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MapsAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MapsAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MapsAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MapsAccount>;
    get(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.MapsAccount>): void;
    get(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MapsAccount>): void;


    /**
     * Get all Maps Accounts in a Resource Group
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MapsAccounts>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MapsAccounts>>;

    /**
     * Get all Maps Accounts in a Resource Group
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MapsAccounts} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MapsAccounts} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MapsAccounts} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MapsAccounts>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.MapsAccounts>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MapsAccounts>): void;


    /**
     * Get all Maps Accounts in a Subscription
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MapsAccounts>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MapsAccounts>>;

    /**
     * Get all Maps Accounts in a Subscription
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MapsAccounts} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MapsAccounts} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MapsAccounts} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscription(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MapsAccounts>;
    listBySubscription(callback: ServiceCallback<models.MapsAccounts>): void;
    listBySubscription(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MapsAccounts>): void;


    /**
     * Moves Maps Accounts from one ResourceGroup (or Subscription) to another
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains Maps Account to move.
     *
     * @param {object} moveRequest The details of the Maps Account move.
     *
     * @param {string} moveRequest.targetResourceGroup The name of the destination
     * resource group.
     *
     * @param {array} moveRequest.resourceIds A list of resource names to move from
     * the source resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    moveWithHttpOperationResponse(resourceGroupName: string, moveRequest: models.MapsAccountsMoveRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Moves Maps Accounts from one ResourceGroup (or Subscription) to another
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains Maps Account to move.
     *
     * @param {object} moveRequest The details of the Maps Account move.
     *
     * @param {string} moveRequest.targetResourceGroup The name of the destination
     * resource group.
     *
     * @param {array} moveRequest.resourceIds A list of resource names to move from
     * the source resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    move(resourceGroupName: string, moveRequest: models.MapsAccountsMoveRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    move(resourceGroupName: string, moveRequest: models.MapsAccountsMoveRequest, callback: ServiceCallback<void>): void;
    move(resourceGroupName: string, moveRequest: models.MapsAccountsMoveRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Get the keys to use with the Maps APIs. A key is used to authenticate and
     * authorize access to the Maps REST APIs. Only one key is needed at a time;
     * two are given to provide seamless key regeneration.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MapsAccountKeys>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MapsAccountKeys>>;

    /**
     * Get the keys to use with the Maps APIs. A key is used to authenticate and
     * authorize access to the Maps REST APIs. Only one key is needed at a time;
     * two are given to provide seamless key regeneration.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MapsAccountKeys} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MapsAccountKeys} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MapsAccountKeys} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listKeys(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MapsAccountKeys>;
    listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.MapsAccountKeys>): void;
    listKeys(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MapsAccountKeys>): void;


    /**
     * Regenerate either the primary or secondary key for use with the Maps APIs.
     * The old key will stop working immediately.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} keySpecification Which key to regenerate:  primary or
     * secondary.
     *
     * @param {string} keySpecification.keyType Whether the operation refers to the
     * primary or secondary key. Possible values include: 'primary', 'secondary'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MapsAccountKeys>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    regenerateKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, keySpecification: models.MapsKeySpecification, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MapsAccountKeys>>;

    /**
     * Regenerate either the primary or secondary key for use with the Maps APIs.
     * The old key will stop working immediately.
     *
     * @param {string} resourceGroupName The name of the Azure Resource Group.
     *
     * @param {string} accountName The name of the Maps Account.
     *
     * @param {object} keySpecification Which key to regenerate:  primary or
     * secondary.
     *
     * @param {string} keySpecification.keyType Whether the operation refers to the
     * primary or secondary key. Possible values include: 'primary', 'secondary'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MapsAccountKeys} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MapsAccountKeys} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MapsAccountKeys} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    regenerateKeys(resourceGroupName: string, accountName: string, keySpecification: models.MapsKeySpecification, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MapsAccountKeys>;
    regenerateKeys(resourceGroupName: string, accountName: string, keySpecification: models.MapsKeySpecification, callback: ServiceCallback<models.MapsAccountKeys>): void;
    regenerateKeys(resourceGroupName: string, accountName: string, keySpecification: models.MapsKeySpecification, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MapsAccountKeys>): void;


    /**
     * List operations available for the Maps Resource Provider
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MapsOperations>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listOperationsWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MapsOperations>>;

    /**
     * List operations available for the Maps Resource Provider
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MapsOperations} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MapsOperations} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MapsOperations} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listOperations(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MapsOperations>;
    listOperations(callback: ServiceCallback<models.MapsOperations>): void;
    listOperations(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MapsOperations>): void;
}
