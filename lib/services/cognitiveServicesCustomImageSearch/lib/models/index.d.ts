/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as moment from "moment";

/**
 * Response base
 */
export interface ResponseBase {
  /**
   * Polymorphic Discriminator
   */
  _type: string;
}

/**
 * Defines the identity of a resource.
 */
export interface Identifiable extends ResponseBase {
  /**
   * A String identifier.
   */
  readonly id?: string;
}

/**
 * Defines a response. All schemas that could be returned at the root of a response should inherit
 * from this
 */
export interface Response extends Identifiable {
  /**
   * The URL that returns this resource.
   */
  readonly readLink?: string;
  /**
   * The URL To Bing's search result for this item.
   */
  readonly webSearchUrl?: string;
}

/**
 * Defines a thing.
 */
export interface Thing extends Response {
  /**
   * The name of the thing represented by this object.
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   */
  readonly url?: string;
  /**
   * An image of the item.
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   */
  readonly description?: string;
  /**
   * An alias for the item
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   */
  readonly bingId?: string;
}

/**
 * The most generic kind of creative work, including books, movies, photographs, software programs,
 * etc.
 */
export interface CreativeWork extends Thing {
  /**
   * The URL to a thumbnail of the item.
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   */
  readonly provider?: Thing[];
  /**
   * Text content of this creative work
   */
  readonly text?: string;
}

/**
 * Defines a media object.
 */
export interface MediaObject extends CreativeWork {
  /**
   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the
   * image).
   */
  readonly contentUrl?: string;
  /**
   * URL of the page that hosts the media object.
   */
  readonly hostPageUrl?: string;
  /**
   * Size of the media object content (use format "value unit" e.g "1024 B").
   */
  readonly contentSize?: string;
  /**
   * Encoding format (e.g mp3, mp4, jpeg, etc).
   */
  readonly encodingFormat?: string;
  /**
   * Display URL of the page that hosts the media object.
   */
  readonly hostPageDisplayUrl?: string;
  /**
   * The width of the media object, in pixels.
   */
  readonly width?: number;
  /**
   * The height of the media object, in pixels.
   */
  readonly height?: number;
}

/**
 * Defines an image
 */
export interface ImageObject extends MediaObject {
  /**
   * The URL to a thumbnail of the image
   */
  readonly thumbnail?: ImageObject;
  /**
   * The token that you use in a subsequent call to the Image Search API to get additional
   * information about the image. For information about using this token, see the insightsToken
   * query parameter.
   */
  readonly imageInsightsToken?: string;
  /**
   * Unique Id for the image
   */
  readonly imageId?: string;
  /**
   * A three-byte hexadecimal number that represents the color that dominates the image. Use the
   * color as the temporary background in your client until the image is loaded.
   */
  readonly accentColor?: string;
  /**
   * Visual representation of the image. Used for getting more sizes
   */
  readonly visualWords?: string;
}

/**
 * Defines an answer.
 */
export interface Answer extends Response {
}

/**
 * Defines a search result answer.
 */
export interface SearchResultsAnswer extends Answer {
  /**
   * The estimated number of webpages that are relevant to the query. Use this number along with
   * the count and offset query parameters to page the results.
   */
  readonly totalEstimatedMatches?: number;
}

/**
 * Defines an image answer
 */
export interface Images extends SearchResultsAnswer {
  /**
   * Used as part of deduping. Tells client the next offset that client should use in the next
   * pagination request
   */
  readonly nextOffset?: number;
  /**
   * A list of image objects that are relevant to the query. If there are no results, the List is
   * empty.
   */
  value: ImageObject[];
}

/**
 * Defines a search query.
 */
export interface Query {
  /**
   * The query string. Use this string as the query term in a new search request.
   */
  text: string;
  /**
   * The display version of the query term. This version of the query term may contain special
   * characters that highlight the search term found in the query string. The string contains the
   * highlighting characters only if the query enabled hit highlighting
   */
  readonly displayText?: string;
  /**
   * The URL that takes the user to the Bing search results page for the query.Only related search
   * results include this field.
   */
  readonly webSearchUrl?: string;
  /**
   * The URL that you use to get the results of the related search. Before using the URL, you must
   * append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header. Use
   * this URL if you're displaying the results in your own user interface. Otherwise, use the
   * webSearchUrl URL.
   */
  readonly searchLink?: string;
  /**
   * The URL to a thumbnail of a related image.
   */
  readonly thumbnail?: ImageObject;
}

/**
 * Defines the error that occurred.
 */
export interface ErrorModel {
  /**
   * The error code that identifies the category of error. Possible values include: 'None',
   * 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',
   * 'InsufficientAuthorization'
   */
  code: string;
  /**
   * The error code that further helps to identify the error. Possible values include:
   * 'UnexpectedError', 'ResourceError', 'NotImplemented', 'ParameterMissing',
   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
   * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
   */
  readonly subCode?: string;
  /**
   * A description of the error.
   */
  message: string;
  /**
   * A description that provides additional information about the error.
   */
  readonly moreDetails?: string;
  /**
   * The parameter in the request that caused the error.
   */
  readonly parameter?: string;
  /**
   * The parameter's value in the request that was not valid.
   */
  readonly value?: string;
}

/**
 * The top-level response that represents a failed request.
 */
export interface ErrorResponse extends Response {
  /**
   * A list of errors that describe the reasons why the request failed.
   */
  errors: ErrorModel[];
}

/**
 * Defines a webpage that is relevant to the query.
 */
export interface WebPage extends CreativeWork {
}
