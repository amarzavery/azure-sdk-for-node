/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Azure async operation status.
 *
 */
class AsyncOperationStatus {
  /**
   * Create a AsyncOperationStatus.
   * @property {string} [id] Async operation id.
   * @property {string} [name] Async operation name.
   * @property {string} [provisioningState] Read Only: The provisioning state
   * of the web service. Valid values are Unknown, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Provisioning', 'Succeeded',
   * 'Failed'
   * @property {date} [startTime] The date time that the async operation
   * started.
   * @property {date} [endTime] The date time that the async operation
   * finished.
   * @property {number} [percentComplete] Async operation progress.
   * @property {object} [errorInfo] If the async operation fails, this
   * structure contains the error details.
   * @property {string} [errorInfo.code] The error code.
   * @property {string} [errorInfo.target] The error target.
   * @property {string} [errorInfo.message] The error message.
   * @property {array} [errorInfo.details] An array containing error
   * information.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AsyncOperationStatus
   *
   * @returns {object} metadata of AsyncOperationStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AsyncOperationStatus',
      type: {
        name: 'Composite',
        className: 'AsyncOperationStatus',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'provisioningState',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            readOnly: true,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            readOnly: true,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          percentComplete: {
            required: false,
            readOnly: true,
            serializedName: 'percentComplete',
            type: {
              name: 'Number'
            }
          },
          errorInfo: {
            required: false,
            readOnly: true,
            serializedName: 'errorInfo',
            type: {
              name: 'Composite',
              className: 'AsyncOperationErrorInfo'
            }
          }
        }
      }
    };
  }
}

module.exports = AsyncOperationStatus;
