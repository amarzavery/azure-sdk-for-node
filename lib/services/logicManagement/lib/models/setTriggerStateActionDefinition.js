/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a SetTriggerStateActionDefinition.
 */
class SetTriggerStateActionDefinition {
  /**
   * Create a SetTriggerStateActionDefinition.
   * @member {object} source
   * @member {string} [source.provisioningState] Gets the provisioning state.
   * Possible values include: 'NotSpecified', 'Accepted', 'Running', 'Ready',
   * 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
   * 'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
   * 'Unregistering', 'Unregistered', 'Completed'
   * @member {date} [source.createdTime] Gets the created time.
   * @member {date} [source.changedTime] Gets the changed time.
   * @member {string} [source.state] Gets the state. Possible values include:
   * 'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
   * @member {string} [source.status] Gets the status. Possible values include:
   * 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded', 'Skipped',
   * 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted',
   * 'Ignored'
   * @member {date} [source.lastExecutionTime] Gets the last execution time.
   * @member {date} [source.nextExecutionTime] Gets the next execution time.
   * @member {object} [source.recurrence] Gets the workflow trigger recurrence.
   * @member {string} [source.recurrence.frequency] The frequency. Possible
   * values include: 'NotSpecified', 'Second', 'Minute', 'Hour', 'Day', 'Week',
   * 'Month', 'Year'
   * @member {number} [source.recurrence.interval] The interval.
   * @member {string} [source.recurrence.startTime] The start time.
   * @member {string} [source.recurrence.endTime] The end time.
   * @member {string} [source.recurrence.timeZone] The time zone.
   * @member {object} [source.recurrence.schedule] The recurrence schedule.
   * @member {array} [source.recurrence.schedule.minutes] The minutes.
   * @member {array} [source.recurrence.schedule.hours] The hours.
   * @member {array} [source.recurrence.schedule.weekDays] The days of the
   * week.
   * @member {array} [source.recurrence.schedule.monthDays] The month days.
   * @member {array} [source.recurrence.schedule.monthlyOccurrences] The
   * monthly occurrences.
   * @member {object} [source.workflow] Gets the reference to workflow.
   * @member {string} [source.workflow.id] The resource id.
   * @member {string} [source.workflow.name] Gets the resource name.
   * @member {string} [source.workflow.type] Gets the resource type.
   * @member {string} [source.name] Gets the workflow trigger name.
   * @member {string} [source.type] Gets the workflow trigger type.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SetTriggerStateActionDefinition
   *
   * @returns {object} metadata of SetTriggerStateActionDefinition
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SetTriggerStateActionDefinition',
      type: {
        name: 'Composite',
        className: 'SetTriggerStateActionDefinition',
        modelProperties: {
          source: {
            required: true,
            serializedName: 'source',
            type: {
              name: 'Composite',
              className: 'WorkflowTrigger'
            }
          }
        }
      }
    };
  }
}

module.exports = SetTriggerStateActionDefinition;
