/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as moment from 'moment';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the TimeSeriesInsightsClient.
 */
export interface Operations {


    /**
     * Lists all of the available Time Series Insights related operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available Time Series Insights related operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * Lists all of the available Time Series Insights related operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available Time Series Insights related operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

/**
 * @class
 * Environments
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the TimeSeriesInsightsClient.
 */
export interface Environments {


    /**
     * Create or update an environment in the specified subscription and resource
     * group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName Name of the environment
     *
     * @param {object} parameters Parameters for creating an environment resource.
     *
     * @param {object} parameters.sku The sku determines the capacity of the
     * environment, the SLA (in queries-per-minute and total capacity), and the
     * billing rate.
     *
     * @param {string} parameters.sku.name The name of this SKU. Possible values
     * include: 'S1', 'S2'
     *
     * @param {number} parameters.sku.capacity The capacity of the sku. This value
     * can be changed to support scale out of environments after they have been
     * created.
     *
     * @param {moment.duration} parameters.dataRetentionTime ISO8601 timespan
     * specifying the minimum number of days the environment's events will be
     * available for query.
     *
     * @param {string} [parameters.storageLimitExceededBehavior] The behavior the
     * Time Series Insights service should take when the environment's capacity has
     * been exceeded. If "PauseIngress" is specified, new events will not be read
     * from the event source. If "PurgeOldData" is specified, new events will
     * continue to be read and old events will be deleted from the environment. The
     * default behavior is PurgeOldData. Possible values include: 'PurgeOldData',
     * 'PauseIngress'
     *
     * @param {array} [parameters.partitionKeyProperties] The list of partition
     * keys according to which the data in the environment will be ordered.
     *
     * @param {string} parameters.location The location of the resource.
     *
     * @param {object} [parameters.tags] Key-value pairs of additional properties
     * for the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EnvironmentResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, parameters: models.EnvironmentCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EnvironmentResource>>;

    /**
     * Create or update an environment in the specified subscription and resource
     * group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName Name of the environment
     *
     * @param {object} parameters Parameters for creating an environment resource.
     *
     * @param {object} parameters.sku The sku determines the capacity of the
     * environment, the SLA (in queries-per-minute and total capacity), and the
     * billing rate.
     *
     * @param {string} parameters.sku.name The name of this SKU. Possible values
     * include: 'S1', 'S2'
     *
     * @param {number} parameters.sku.capacity The capacity of the sku. This value
     * can be changed to support scale out of environments after they have been
     * created.
     *
     * @param {moment.duration} parameters.dataRetentionTime ISO8601 timespan
     * specifying the minimum number of days the environment's events will be
     * available for query.
     *
     * @param {string} [parameters.storageLimitExceededBehavior] The behavior the
     * Time Series Insights service should take when the environment's capacity has
     * been exceeded. If "PauseIngress" is specified, new events will not be read
     * from the event source. If "PurgeOldData" is specified, new events will
     * continue to be read and old events will be deleted from the environment. The
     * default behavior is PurgeOldData. Possible values include: 'PurgeOldData',
     * 'PauseIngress'
     *
     * @param {array} [parameters.partitionKeyProperties] The list of partition
     * keys according to which the data in the environment will be ordered.
     *
     * @param {string} parameters.location The location of the resource.
     *
     * @param {object} [parameters.tags] Key-value pairs of additional properties
     * for the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EnvironmentResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EnvironmentResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EnvironmentResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, environmentName: string, parameters: models.EnvironmentCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EnvironmentResource>;
    createOrUpdate(resourceGroupName: string, environmentName: string, parameters: models.EnvironmentCreateOrUpdateParameters, callback: ServiceCallback<models.EnvironmentResource>): void;
    createOrUpdate(resourceGroupName: string, environmentName: string, parameters: models.EnvironmentCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EnvironmentResource>): void;


    /**
     * Gets the environment with the specified name in the specified subscription
     * and resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] Setting $expand=status will include the
     * status of the internal services of the environment in the Time Series
     * Insights service.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EnvironmentResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, environmentName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EnvironmentResource>>;

    /**
     * Gets the environment with the specified name in the specified subscription
     * and resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] Setting $expand=status will include the
     * status of the internal services of the environment in the Time Series
     * Insights service.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EnvironmentResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EnvironmentResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EnvironmentResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, environmentName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.EnvironmentResource>;
    get(resourceGroupName: string, environmentName: string, callback: ServiceCallback<models.EnvironmentResource>): void;
    get(resourceGroupName: string, environmentName: string, options: { expand? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EnvironmentResource>): void;


    /**
     * Updates the environment with the specified name in the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} environmentUpdateParameters Request object that contains the
     * updated information for the environment.
     *
     * @param {object} [environmentUpdateParameters.sku] The sku of the
     * environment.
     *
     * @param {string} environmentUpdateParameters.sku.name The name of this SKU.
     * Possible values include: 'S1', 'S2'
     *
     * @param {number} environmentUpdateParameters.sku.capacity The capacity of the
     * sku. This value can be changed to support scale out of environments after
     * they have been created.
     *
     * @param {object} [environmentUpdateParameters.tags] Key-value pairs of
     * additional properties for the environment.
     *
     * @param {moment.duration} [environmentUpdateParameters.dataRetentionTime]
     * ISO8601 timespan specifying the minimum number of days the environment's
     * events will be available for query.
     *
     * @param {string} [environmentUpdateParameters.storageLimitExceededBehavior]
     * The behavior the Time Series Insights service should take when the
     * environment's capacity has been exceeded. If "PauseIngress" is specified,
     * new events will not be read from the event source. If "PurgeOldData" is
     * specified, new events will continue to be read and old events will be
     * deleted from the environment. The default behavior is PurgeOldData. Possible
     * values include: 'PurgeOldData', 'PauseIngress'
     *
     * @param {array} [environmentUpdateParameters.partitionKeyProperties] The list
     * of event properties which will be used to partition data in the environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EnvironmentResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, environmentUpdateParameters: models.EnvironmentUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EnvironmentResource>>;

    /**
     * Updates the environment with the specified name in the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} environmentUpdateParameters Request object that contains the
     * updated information for the environment.
     *
     * @param {object} [environmentUpdateParameters.sku] The sku of the
     * environment.
     *
     * @param {string} environmentUpdateParameters.sku.name The name of this SKU.
     * Possible values include: 'S1', 'S2'
     *
     * @param {number} environmentUpdateParameters.sku.capacity The capacity of the
     * sku. This value can be changed to support scale out of environments after
     * they have been created.
     *
     * @param {object} [environmentUpdateParameters.tags] Key-value pairs of
     * additional properties for the environment.
     *
     * @param {moment.duration} [environmentUpdateParameters.dataRetentionTime]
     * ISO8601 timespan specifying the minimum number of days the environment's
     * events will be available for query.
     *
     * @param {string} [environmentUpdateParameters.storageLimitExceededBehavior]
     * The behavior the Time Series Insights service should take when the
     * environment's capacity has been exceeded. If "PauseIngress" is specified,
     * new events will not be read from the event source. If "PurgeOldData" is
     * specified, new events will continue to be read and old events will be
     * deleted from the environment. The default behavior is PurgeOldData. Possible
     * values include: 'PurgeOldData', 'PauseIngress'
     *
     * @param {array} [environmentUpdateParameters.partitionKeyProperties] The list
     * of event properties which will be used to partition data in the environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EnvironmentResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EnvironmentResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EnvironmentResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, environmentName: string, environmentUpdateParameters: models.EnvironmentUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EnvironmentResource>;
    update(resourceGroupName: string, environmentName: string, environmentUpdateParameters: models.EnvironmentUpdateParameters, callback: ServiceCallback<models.EnvironmentResource>): void;
    update(resourceGroupName: string, environmentName: string, environmentUpdateParameters: models.EnvironmentUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EnvironmentResource>): void;


    /**
     * Deletes the environment with the specified name in the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, environmentName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the environment with the specified name in the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, environmentName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, environmentName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, environmentName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all the available environments associated with the subscription and
     * within the specified resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EnvironmentListResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EnvironmentListResponse>>;

    /**
     * Lists all the available environments associated with the subscription and
     * within the specified resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EnvironmentListResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EnvironmentListResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EnvironmentListResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EnvironmentListResponse>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.EnvironmentListResponse>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EnvironmentListResponse>): void;


    /**
     * Lists all the available environments within a subscription, irrespective of
     * the resource groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EnvironmentListResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EnvironmentListResponse>>;

    /**
     * Lists all the available environments within a subscription, irrespective of
     * the resource groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EnvironmentListResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EnvironmentListResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EnvironmentListResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscription(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EnvironmentListResponse>;
    listBySubscription(callback: ServiceCallback<models.EnvironmentListResponse>): void;
    listBySubscription(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EnvironmentListResponse>): void;


    /**
     * Create or update an environment in the specified subscription and resource
     * group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName Name of the environment
     *
     * @param {object} parameters Parameters for creating an environment resource.
     *
     * @param {object} parameters.sku The sku determines the capacity of the
     * environment, the SLA (in queries-per-minute and total capacity), and the
     * billing rate.
     *
     * @param {string} parameters.sku.name The name of this SKU. Possible values
     * include: 'S1', 'S2'
     *
     * @param {number} parameters.sku.capacity The capacity of the sku. This value
     * can be changed to support scale out of environments after they have been
     * created.
     *
     * @param {moment.duration} parameters.dataRetentionTime ISO8601 timespan
     * specifying the minimum number of days the environment's events will be
     * available for query.
     *
     * @param {string} [parameters.storageLimitExceededBehavior] The behavior the
     * Time Series Insights service should take when the environment's capacity has
     * been exceeded. If "PauseIngress" is specified, new events will not be read
     * from the event source. If "PurgeOldData" is specified, new events will
     * continue to be read and old events will be deleted from the environment. The
     * default behavior is PurgeOldData. Possible values include: 'PurgeOldData',
     * 'PauseIngress'
     *
     * @param {array} [parameters.partitionKeyProperties] The list of partition
     * keys according to which the data in the environment will be ordered.
     *
     * @param {string} parameters.location The location of the resource.
     *
     * @param {object} [parameters.tags] Key-value pairs of additional properties
     * for the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EnvironmentResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, parameters: models.EnvironmentCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EnvironmentResource>>;

    /**
     * Create or update an environment in the specified subscription and resource
     * group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName Name of the environment
     *
     * @param {object} parameters Parameters for creating an environment resource.
     *
     * @param {object} parameters.sku The sku determines the capacity of the
     * environment, the SLA (in queries-per-minute and total capacity), and the
     * billing rate.
     *
     * @param {string} parameters.sku.name The name of this SKU. Possible values
     * include: 'S1', 'S2'
     *
     * @param {number} parameters.sku.capacity The capacity of the sku. This value
     * can be changed to support scale out of environments after they have been
     * created.
     *
     * @param {moment.duration} parameters.dataRetentionTime ISO8601 timespan
     * specifying the minimum number of days the environment's events will be
     * available for query.
     *
     * @param {string} [parameters.storageLimitExceededBehavior] The behavior the
     * Time Series Insights service should take when the environment's capacity has
     * been exceeded. If "PauseIngress" is specified, new events will not be read
     * from the event source. If "PurgeOldData" is specified, new events will
     * continue to be read and old events will be deleted from the environment. The
     * default behavior is PurgeOldData. Possible values include: 'PurgeOldData',
     * 'PauseIngress'
     *
     * @param {array} [parameters.partitionKeyProperties] The list of partition
     * keys according to which the data in the environment will be ordered.
     *
     * @param {string} parameters.location The location of the resource.
     *
     * @param {object} [parameters.tags] Key-value pairs of additional properties
     * for the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EnvironmentResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EnvironmentResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EnvironmentResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, environmentName: string, parameters: models.EnvironmentCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EnvironmentResource>;
    beginCreateOrUpdate(resourceGroupName: string, environmentName: string, parameters: models.EnvironmentCreateOrUpdateParameters, callback: ServiceCallback<models.EnvironmentResource>): void;
    beginCreateOrUpdate(resourceGroupName: string, environmentName: string, parameters: models.EnvironmentCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EnvironmentResource>): void;


    /**
     * Updates the environment with the specified name in the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} environmentUpdateParameters Request object that contains the
     * updated information for the environment.
     *
     * @param {object} [environmentUpdateParameters.sku] The sku of the
     * environment.
     *
     * @param {string} environmentUpdateParameters.sku.name The name of this SKU.
     * Possible values include: 'S1', 'S2'
     *
     * @param {number} environmentUpdateParameters.sku.capacity The capacity of the
     * sku. This value can be changed to support scale out of environments after
     * they have been created.
     *
     * @param {object} [environmentUpdateParameters.tags] Key-value pairs of
     * additional properties for the environment.
     *
     * @param {moment.duration} [environmentUpdateParameters.dataRetentionTime]
     * ISO8601 timespan specifying the minimum number of days the environment's
     * events will be available for query.
     *
     * @param {string} [environmentUpdateParameters.storageLimitExceededBehavior]
     * The behavior the Time Series Insights service should take when the
     * environment's capacity has been exceeded. If "PauseIngress" is specified,
     * new events will not be read from the event source. If "PurgeOldData" is
     * specified, new events will continue to be read and old events will be
     * deleted from the environment. The default behavior is PurgeOldData. Possible
     * values include: 'PurgeOldData', 'PauseIngress'
     *
     * @param {array} [environmentUpdateParameters.partitionKeyProperties] The list
     * of event properties which will be used to partition data in the environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EnvironmentResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, environmentUpdateParameters: models.EnvironmentUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EnvironmentResource>>;

    /**
     * Updates the environment with the specified name in the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} environmentUpdateParameters Request object that contains the
     * updated information for the environment.
     *
     * @param {object} [environmentUpdateParameters.sku] The sku of the
     * environment.
     *
     * @param {string} environmentUpdateParameters.sku.name The name of this SKU.
     * Possible values include: 'S1', 'S2'
     *
     * @param {number} environmentUpdateParameters.sku.capacity The capacity of the
     * sku. This value can be changed to support scale out of environments after
     * they have been created.
     *
     * @param {object} [environmentUpdateParameters.tags] Key-value pairs of
     * additional properties for the environment.
     *
     * @param {moment.duration} [environmentUpdateParameters.dataRetentionTime]
     * ISO8601 timespan specifying the minimum number of days the environment's
     * events will be available for query.
     *
     * @param {string} [environmentUpdateParameters.storageLimitExceededBehavior]
     * The behavior the Time Series Insights service should take when the
     * environment's capacity has been exceeded. If "PauseIngress" is specified,
     * new events will not be read from the event source. If "PurgeOldData" is
     * specified, new events will continue to be read and old events will be
     * deleted from the environment. The default behavior is PurgeOldData. Possible
     * values include: 'PurgeOldData', 'PauseIngress'
     *
     * @param {array} [environmentUpdateParameters.partitionKeyProperties] The list
     * of event properties which will be used to partition data in the environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EnvironmentResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EnvironmentResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EnvironmentResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, environmentName: string, environmentUpdateParameters: models.EnvironmentUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EnvironmentResource>;
    beginUpdate(resourceGroupName: string, environmentName: string, environmentUpdateParameters: models.EnvironmentUpdateParameters, callback: ServiceCallback<models.EnvironmentResource>): void;
    beginUpdate(resourceGroupName: string, environmentName: string, environmentUpdateParameters: models.EnvironmentUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EnvironmentResource>): void;
}

/**
 * @class
 * EventSources
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the TimeSeriesInsightsClient.
 */
export interface EventSources {


    /**
     * Create or update an event source under the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} eventSourceName Name of the event source.
     *
     * @param {object} parameters Parameters for creating an event source resource.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {string} parameters.location The location of the resource.
     *
     * @param {object} [parameters.tags] Key-value pairs of additional properties
     * for the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EventSourceResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, eventSourceName: string, parameters: models.EventSourceCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EventSourceResource>>;

    /**
     * Create or update an event source under the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} eventSourceName Name of the event source.
     *
     * @param {object} parameters Parameters for creating an event source resource.
     *
     * @param {string} parameters.kind Polymorphic Discriminator
     *
     * @param {string} parameters.location The location of the resource.
     *
     * @param {object} [parameters.tags] Key-value pairs of additional properties
     * for the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EventSourceResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EventSourceResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EventSourceResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, environmentName: string, eventSourceName: string, parameters: models.EventSourceCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EventSourceResource>;
    createOrUpdate(resourceGroupName: string, environmentName: string, eventSourceName: string, parameters: models.EventSourceCreateOrUpdateParameters, callback: ServiceCallback<models.EventSourceResource>): void;
    createOrUpdate(resourceGroupName: string, environmentName: string, eventSourceName: string, parameters: models.EventSourceCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EventSourceResource>): void;


    /**
     * Gets the event source with the specified name in the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} eventSourceName The name of the Time Series Insights event
     * source associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EventSourceResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, environmentName: string, eventSourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EventSourceResource>>;

    /**
     * Gets the event source with the specified name in the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} eventSourceName The name of the Time Series Insights event
     * source associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EventSourceResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EventSourceResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EventSourceResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, environmentName: string, eventSourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EventSourceResource>;
    get(resourceGroupName: string, environmentName: string, eventSourceName: string, callback: ServiceCallback<models.EventSourceResource>): void;
    get(resourceGroupName: string, environmentName: string, eventSourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EventSourceResource>): void;


    /**
     * Updates the event source with the specified name in the specified
     * subscription, resource group, and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} eventSourceName The name of the Time Series Insights event
     * source associated with the specified environment.
     *
     * @param {object} eventSourceUpdateParameters Request object that contains the
     * updated information for the event source.
     *
     * @param {object} [eventSourceUpdateParameters.tags] Key-value pairs of
     * additional properties for the event source.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EventSourceResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, eventSourceName: string, eventSourceUpdateParameters: models.EventSourceUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EventSourceResource>>;

    /**
     * Updates the event source with the specified name in the specified
     * subscription, resource group, and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} eventSourceName The name of the Time Series Insights event
     * source associated with the specified environment.
     *
     * @param {object} eventSourceUpdateParameters Request object that contains the
     * updated information for the event source.
     *
     * @param {object} [eventSourceUpdateParameters.tags] Key-value pairs of
     * additional properties for the event source.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EventSourceResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EventSourceResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EventSourceResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, environmentName: string, eventSourceName: string, eventSourceUpdateParameters: models.EventSourceUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EventSourceResource>;
    update(resourceGroupName: string, environmentName: string, eventSourceName: string, eventSourceUpdateParameters: models.EventSourceUpdateParameters, callback: ServiceCallback<models.EventSourceResource>): void;
    update(resourceGroupName: string, environmentName: string, eventSourceName: string, eventSourceUpdateParameters: models.EventSourceUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EventSourceResource>): void;


    /**
     * Deletes the event source with the specified name in the specified
     * subscription, resource group, and environment
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} eventSourceName The name of the Time Series Insights event
     * source associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, environmentName: string, eventSourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the event source with the specified name in the specified
     * subscription, resource group, and environment
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} eventSourceName The name of the Time Series Insights event
     * source associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, environmentName: string, eventSourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, environmentName: string, eventSourceName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, environmentName: string, eventSourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all the available event sources associated with the subscription and
     * within the specified resource group and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EventSourceListResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByEnvironmentWithHttpOperationResponse(resourceGroupName: string, environmentName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EventSourceListResponse>>;

    /**
     * Lists all the available event sources associated with the subscription and
     * within the specified resource group and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EventSourceListResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EventSourceListResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EventSourceListResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByEnvironment(resourceGroupName: string, environmentName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EventSourceListResponse>;
    listByEnvironment(resourceGroupName: string, environmentName: string, callback: ServiceCallback<models.EventSourceListResponse>): void;
    listByEnvironment(resourceGroupName: string, environmentName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EventSourceListResponse>): void;
}

/**
 * @class
 * ReferenceDataSets
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the TimeSeriesInsightsClient.
 */
export interface ReferenceDataSets {


    /**
     * Create or update a reference data set in the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} referenceDataSetName Name of the reference data set.
     *
     * @param {object} parameters Parameters for creating a reference data set.
     *
     * @param {array} parameters.keyProperties The list of key properties for the
     * reference data set.
     *
     * @param {string} [parameters.dataStringComparisonBehavior] The reference data
     * set key comparison behavior can be set using this property. By default, the
     * value is 'Ordinal' - which means case sensitive key comparison will be
     * performed while joining reference data with events or while adding new
     * reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison
     * will be used. Possible values include: 'Ordinal', 'OrdinalIgnoreCase'
     *
     * @param {string} parameters.location The location of the resource.
     *
     * @param {object} [parameters.tags] Key-value pairs of additional properties
     * for the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReferenceDataSetResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, referenceDataSetName: string, parameters: models.ReferenceDataSetCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReferenceDataSetResource>>;

    /**
     * Create or update a reference data set in the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} referenceDataSetName Name of the reference data set.
     *
     * @param {object} parameters Parameters for creating a reference data set.
     *
     * @param {array} parameters.keyProperties The list of key properties for the
     * reference data set.
     *
     * @param {string} [parameters.dataStringComparisonBehavior] The reference data
     * set key comparison behavior can be set using this property. By default, the
     * value is 'Ordinal' - which means case sensitive key comparison will be
     * performed while joining reference data with events or while adding new
     * reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison
     * will be used. Possible values include: 'Ordinal', 'OrdinalIgnoreCase'
     *
     * @param {string} parameters.location The location of the resource.
     *
     * @param {object} [parameters.tags] Key-value pairs of additional properties
     * for the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReferenceDataSetResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReferenceDataSetResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReferenceDataSetResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, environmentName: string, referenceDataSetName: string, parameters: models.ReferenceDataSetCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReferenceDataSetResource>;
    createOrUpdate(resourceGroupName: string, environmentName: string, referenceDataSetName: string, parameters: models.ReferenceDataSetCreateOrUpdateParameters, callback: ServiceCallback<models.ReferenceDataSetResource>): void;
    createOrUpdate(resourceGroupName: string, environmentName: string, referenceDataSetName: string, parameters: models.ReferenceDataSetCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReferenceDataSetResource>): void;


    /**
     * Gets the reference data set with the specified name in the specified
     * environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} referenceDataSetName The name of the Time Series Insights
     * reference data set associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReferenceDataSetResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, environmentName: string, referenceDataSetName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReferenceDataSetResource>>;

    /**
     * Gets the reference data set with the specified name in the specified
     * environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} referenceDataSetName The name of the Time Series Insights
     * reference data set associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReferenceDataSetResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReferenceDataSetResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReferenceDataSetResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, environmentName: string, referenceDataSetName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReferenceDataSetResource>;
    get(resourceGroupName: string, environmentName: string, referenceDataSetName: string, callback: ServiceCallback<models.ReferenceDataSetResource>): void;
    get(resourceGroupName: string, environmentName: string, referenceDataSetName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReferenceDataSetResource>): void;


    /**
     * Updates the reference data set with the specified name in the specified
     * subscription, resource group, and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} referenceDataSetName The name of the Time Series Insights
     * reference data set associated with the specified environment.
     *
     * @param {object} referenceDataSetUpdateParameters Request object that
     * contains the updated information for the reference data set.
     *
     * @param {object} [referenceDataSetUpdateParameters.tags] Key-value pairs of
     * additional properties for the reference data set.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReferenceDataSetResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, referenceDataSetName: string, referenceDataSetUpdateParameters: models.ReferenceDataSetUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReferenceDataSetResource>>;

    /**
     * Updates the reference data set with the specified name in the specified
     * subscription, resource group, and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} referenceDataSetName The name of the Time Series Insights
     * reference data set associated with the specified environment.
     *
     * @param {object} referenceDataSetUpdateParameters Request object that
     * contains the updated information for the reference data set.
     *
     * @param {object} [referenceDataSetUpdateParameters.tags] Key-value pairs of
     * additional properties for the reference data set.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReferenceDataSetResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReferenceDataSetResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReferenceDataSetResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, environmentName: string, referenceDataSetName: string, referenceDataSetUpdateParameters: models.ReferenceDataSetUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReferenceDataSetResource>;
    update(resourceGroupName: string, environmentName: string, referenceDataSetName: string, referenceDataSetUpdateParameters: models.ReferenceDataSetUpdateParameters, callback: ServiceCallback<models.ReferenceDataSetResource>): void;
    update(resourceGroupName: string, environmentName: string, referenceDataSetName: string, referenceDataSetUpdateParameters: models.ReferenceDataSetUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReferenceDataSetResource>): void;


    /**
     * Deletes the reference data set with the specified name in the specified
     * subscription, resource group, and environment
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} referenceDataSetName The name of the Time Series Insights
     * reference data set associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, environmentName: string, referenceDataSetName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the reference data set with the specified name in the specified
     * subscription, resource group, and environment
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} referenceDataSetName The name of the Time Series Insights
     * reference data set associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, environmentName: string, referenceDataSetName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, environmentName: string, referenceDataSetName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, environmentName: string, referenceDataSetName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all the available reference data sets associated with the subscription
     * and within the specified resource group and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReferenceDataSetListResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByEnvironmentWithHttpOperationResponse(resourceGroupName: string, environmentName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReferenceDataSetListResponse>>;

    /**
     * Lists all the available reference data sets associated with the subscription
     * and within the specified resource group and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReferenceDataSetListResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReferenceDataSetListResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReferenceDataSetListResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByEnvironment(resourceGroupName: string, environmentName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReferenceDataSetListResponse>;
    listByEnvironment(resourceGroupName: string, environmentName: string, callback: ServiceCallback<models.ReferenceDataSetListResponse>): void;
    listByEnvironment(resourceGroupName: string, environmentName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReferenceDataSetListResponse>): void;
}

/**
 * @class
 * AccessPolicies
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the TimeSeriesInsightsClient.
 */
export interface AccessPolicies {


    /**
     * Create or update an access policy in the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} accessPolicyName Name of the access policy.
     *
     * @param {object} parameters Parameters for creating an access policy.
     *
     * @param {string} [parameters.principalObjectId] The objectId of the principal
     * in Azure Active Directory.
     *
     * @param {string} [parameters.description] An description of the access
     * policy.
     *
     * @param {array} [parameters.roles] The list of roles the principal is
     * assigned on the environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccessPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, accessPolicyName: string, parameters: models.AccessPolicyCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccessPolicyResource>>;

    /**
     * Create or update an access policy in the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} accessPolicyName Name of the access policy.
     *
     * @param {object} parameters Parameters for creating an access policy.
     *
     * @param {string} [parameters.principalObjectId] The objectId of the principal
     * in Azure Active Directory.
     *
     * @param {string} [parameters.description] An description of the access
     * policy.
     *
     * @param {array} [parameters.roles] The list of roles the principal is
     * assigned on the environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccessPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccessPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccessPolicyResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, environmentName: string, accessPolicyName: string, parameters: models.AccessPolicyCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccessPolicyResource>;
    createOrUpdate(resourceGroupName: string, environmentName: string, accessPolicyName: string, parameters: models.AccessPolicyCreateOrUpdateParameters, callback: ServiceCallback<models.AccessPolicyResource>): void;
    createOrUpdate(resourceGroupName: string, environmentName: string, accessPolicyName: string, parameters: models.AccessPolicyCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccessPolicyResource>): void;


    /**
     * Gets the access policy with the specified name in the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} accessPolicyName The name of the Time Series Insights access
     * policy associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccessPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, environmentName: string, accessPolicyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccessPolicyResource>>;

    /**
     * Gets the access policy with the specified name in the specified environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} accessPolicyName The name of the Time Series Insights access
     * policy associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccessPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccessPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccessPolicyResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, environmentName: string, accessPolicyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccessPolicyResource>;
    get(resourceGroupName: string, environmentName: string, accessPolicyName: string, callback: ServiceCallback<models.AccessPolicyResource>): void;
    get(resourceGroupName: string, environmentName: string, accessPolicyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccessPolicyResource>): void;


    /**
     * Updates the access policy with the specified name in the specified
     * subscription, resource group, and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} accessPolicyName The name of the Time Series Insights access
     * policy associated with the specified environment.
     *
     * @param {object} accessPolicyUpdateParameters Request object that contains
     * the updated information for the access policy.
     *
     * @param {string} [accessPolicyUpdateParameters.description] An description of
     * the access policy.
     *
     * @param {array} [accessPolicyUpdateParameters.roles] The list of roles the
     * principal is assigned on the environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccessPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, environmentName: string, accessPolicyName: string, accessPolicyUpdateParameters: models.AccessPolicyUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccessPolicyResource>>;

    /**
     * Updates the access policy with the specified name in the specified
     * subscription, resource group, and environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} accessPolicyName The name of the Time Series Insights access
     * policy associated with the specified environment.
     *
     * @param {object} accessPolicyUpdateParameters Request object that contains
     * the updated information for the access policy.
     *
     * @param {string} [accessPolicyUpdateParameters.description] An description of
     * the access policy.
     *
     * @param {array} [accessPolicyUpdateParameters.roles] The list of roles the
     * principal is assigned on the environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccessPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccessPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccessPolicyResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, environmentName: string, accessPolicyName: string, accessPolicyUpdateParameters: models.AccessPolicyUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccessPolicyResource>;
    update(resourceGroupName: string, environmentName: string, accessPolicyName: string, accessPolicyUpdateParameters: models.AccessPolicyUpdateParameters, callback: ServiceCallback<models.AccessPolicyResource>): void;
    update(resourceGroupName: string, environmentName: string, accessPolicyName: string, accessPolicyUpdateParameters: models.AccessPolicyUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccessPolicyResource>): void;


    /**
     * Deletes the access policy with the specified name in the specified
     * subscription, resource group, and environment
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} accessPolicyName The name of the Time Series Insights access
     * policy associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, environmentName: string, accessPolicyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the access policy with the specified name in the specified
     * subscription, resource group, and environment
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {string} accessPolicyName The name of the Time Series Insights access
     * policy associated with the specified environment.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, environmentName: string, accessPolicyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, environmentName: string, accessPolicyName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, environmentName: string, accessPolicyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all the available access policies associated with the environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccessPolicyListResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByEnvironmentWithHttpOperationResponse(resourceGroupName: string, environmentName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccessPolicyListResponse>>;

    /**
     * Lists all the available access policies associated with the environment.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} environmentName The name of the Time Series Insights
     * environment associated with the specified resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccessPolicyListResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccessPolicyListResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccessPolicyListResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByEnvironment(resourceGroupName: string, environmentName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccessPolicyListResponse>;
    listByEnvironment(resourceGroupName: string, environmentName: string, callback: ServiceCallback<models.AccessPolicyListResponse>): void;
    listByEnvironment(resourceGroupName: string, environmentName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccessPolicyListResponse>): void;
}
