/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Evaluate response object.
 *
 */
class Evaluate {
  /**
   * Create a Evaluate.
   * @property {string} [cacheID] The cache id.
   * @property {boolean} [result] Evaluate result.
   * @property {string} [trackingId] The tracking id.
   * @property {number} [adultClassificationScore] The adult classification
   * score.
   * @property {boolean} [isImageAdultClassified] Indicates if an image is
   * classified as adult.
   * @property {number} [racyClassificationScore] The racy classification
   * score.
   * @property {boolean} [isImageRacyClassified] Indicates if the image is
   * classified as racy.
   * @property {array} [advancedInfo] The advanced info.
   * @property {object} [status] The evaluate status
   * @property {number} [status.code] Status code.
   * @property {string} [status.description] Status description.
   * @property {string} [status.exception] Exception status.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Evaluate
   *
   * @returns {object} metadata of Evaluate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Evaluate',
      type: {
        name: 'Composite',
        className: 'Evaluate',
        modelProperties: {
          cacheID: {
            required: false,
            serializedName: 'CacheID',
            type: {
              name: 'String'
            }
          },
          result: {
            required: false,
            serializedName: 'Result',
            type: {
              name: 'Boolean'
            }
          },
          trackingId: {
            required: false,
            serializedName: 'TrackingId',
            type: {
              name: 'String'
            }
          },
          adultClassificationScore: {
            required: false,
            serializedName: 'AdultClassificationScore',
            type: {
              name: 'Number'
            }
          },
          isImageAdultClassified: {
            required: false,
            serializedName: 'IsImageAdultClassified',
            type: {
              name: 'Boolean'
            }
          },
          racyClassificationScore: {
            required: false,
            serializedName: 'RacyClassificationScore',
            type: {
              name: 'Number'
            }
          },
          isImageRacyClassified: {
            required: false,
            serializedName: 'IsImageRacyClassified',
            type: {
              name: 'Boolean'
            }
          },
          advancedInfo: {
            required: false,
            serializedName: 'AdvancedInfo',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'KeyValuePairElementType',
                  type: {
                    name: 'Composite',
                    className: 'KeyValuePair'
                  }
              }
            }
          },
          status: {
            required: false,
            serializedName: 'Status',
            type: {
              name: 'Composite',
              className: 'Status'
            }
          }
        }
      }
    };
  }
}

module.exports = Evaluate;
