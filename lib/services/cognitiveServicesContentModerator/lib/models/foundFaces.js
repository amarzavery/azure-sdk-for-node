/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Request object the contains found faces.
 *
 */
class FoundFaces {
  /**
   * Create a FoundFaces.
   * @property {object} [status] The evaluate status
   * @property {number} [status.code] Status code.
   * @property {string} [status.description] Status description.
   * @property {string} [status.exception] Exception status.
   * @property {string} [trackingId] The tracking id.
   * @property {string} [cacheId] The cache id.
   * @property {boolean} [result] True if result was found.
   * @property {number} [count] Number of faces found.
   * @property {array} [advancedInfo] The advanced info.
   * @property {array} [faces] The list of faces.
   */
  constructor() {
  }

  /**
   * Defines the metadata of FoundFaces
   *
   * @returns {object} metadata of FoundFaces
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FoundFaces',
      type: {
        name: 'Composite',
        className: 'FoundFaces',
        modelProperties: {
          status: {
            required: false,
            serializedName: 'Status',
            type: {
              name: 'Composite',
              className: 'Status'
            }
          },
          trackingId: {
            required: false,
            serializedName: 'TrackingId',
            type: {
              name: 'String'
            }
          },
          cacheId: {
            required: false,
            serializedName: 'CacheId',
            type: {
              name: 'String'
            }
          },
          result: {
            required: false,
            serializedName: 'Result',
            type: {
              name: 'Boolean'
            }
          },
          count: {
            required: false,
            serializedName: 'Count',
            type: {
              name: 'Number'
            }
          },
          advancedInfo: {
            required: false,
            serializedName: 'AdvancedInfo',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'KeyValuePairElementType',
                  type: {
                    name: 'Composite',
                    className: 'KeyValuePair'
                  }
              }
            }
          },
          faces: {
            required: false,
            serializedName: 'Faces',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'FaceElementType',
                  type: {
                    name: 'Composite',
                    className: 'Face'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = FoundFaces;
