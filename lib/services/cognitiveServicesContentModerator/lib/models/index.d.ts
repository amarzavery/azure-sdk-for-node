/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as moment from "moment";

/**
 * The key value pair object properties.
 */
export interface KeyValuePair {
  /**
   * The key parameter.
   */
  key?: string;
  /**
   * The value parameter.
   */
  value?: string;
}

/**
 * Tag details.
 */
export interface Tag {
  /**
   * The key parameter.
   */
  key?: string;
  /**
   * The value parameter.
   */
  value?: string;
}

/**
 * Video frame property details.
 */
export interface Frame {
  /**
   * Timestamp of the frame.
   */
  timestamp?: string;
  /**
   * Frame image.
   */
  frameImage?: string;
  /**
   * Array of KeyValue.
   */
  metadata?: KeyValuePair[];
  /**
   * Reviewer result tags.
   */
  reviewerResultTags?: Tag[];
}

/**
 * The response for a Get Frames request.
 */
export interface Frames {
  /**
   * Id of the review.
   */
  reviewId?: string;
  videoFrames?: Frame[];
}

/**
 * The category1 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
 * here</a> for more details on category classification.
*/
export interface ClassificationCategory1 {
  /**
   * The category1 score.
  */
  score?: number;
}

/**
 * The category2 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
 * here</a> for more details on category classification.
*/
export interface ClassificationCategory2 {
  /**
   * The category2 score.
  */
  score?: number;
}

/**
 * The category3 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
 * here</a> for more details on category classification.
*/
export interface ClassificationCategory3 {
  /**
   * The category3 score.
  */
  score?: number;
}

/**
 * The classification details of the text.
*/
export interface Classification {
  /**
   * The category1 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
   * here</a> for more details on category classification.
  */
  category1?: ClassificationCategory1;
  /**
   * The category2 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
   * here</a> for more details on category classification.
  */
  category2?: ClassificationCategory2;
  /**
   * The category3 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
   * here</a> for more details on category classification.
  */
  category3?: ClassificationCategory3;
  /**
   * The review recommended flag.
  */
  reviewRecommended?: boolean;
}

/**
 * Status properties.
*/
export interface Status {
  /**
   * Status code.
  */
  code?: number;
  /**
   * Status description.
  */
  description?: string;
  /**
   * Exception status.
  */
  exception?: string;
}

/**
 * Email Address details.
*/
export interface Email {
  /**
   * Detected Email Address from the input text content.
  */
  detected?: string;
  /**
   * Subtype of the detected Email Address.
  */
  subType?: string;
  /**
   * Email Address in the input text content.
  */
  text?: string;
  /**
   * Index(Location) of the Email address in the input text content.
  */
  index?: number;
}

/**
 * Detected SSN details.
*/
export interface SSN {
  /**
   * Detected SSN in the input text content.
  */
  text?: string;
  /**
   * Index(Location) of the SSN in the input text content.
  */
  index?: number;
}

/**
 * IP Address details.
*/
export interface IPA {
  /**
   * Subtype of the detected IP Address.
  */
  subType?: string;
  /**
   * Detected IP Address.
  */
  text?: string;
  /**
   * Index(Location) of the IP Address in the input text content.
  */
  index?: number;
}

/**
 * Phone Property details.
*/
export interface Phone {
  /**
   * CountryCode of the detected Phone number.
  */
  countryCode?: string;
  /**
   * Detected Phone number.
  */
  text?: string;
  /**
   * Index(Location) of the Phone number in the input text content.
  */
  index?: number;
}

/**
 * Address details.
*/
export interface Address {
  /**
   * Detected Address.
  */
  text?: string;
  /**
   * Index(Location) of the Address in the input text content.
  */
  index?: number;
}

/**
 * Personal Identifier Information details.
*/
export interface PII {
  email?: Email[];
  sSN?: SSN[];
  iPA?: IPA[];
  phone?: Phone[];
  address?: Address[];
}

/**
 * Detected Terms details.
*/
export interface DetectedTerms {
  /**
   * Index(Location) of the detected profanity term in the input text content.
  */
  index?: number;
  /**
   * Original Index(Location) of the detected profanity term in the input text content.
  */
  originalIndex?: number;
  /**
   * Matched Terms list Id.
  */
  listId?: number;
  /**
   * Detected profanity term.
  */
  term?: string;
}

/**
 * The response for a Screen text request.
*/
export interface Screen {
  /**
   * The original text.
  */
  originalText?: string;
  /**
   * The normalized text.
  */
  normalizedText?: string;
  /**
   * The autocorrected text
  */
  autoCorrectedText?: string;
  /**
   * The misrepresentation text.
  */
  misrepresentation?: string[];
  /**
   * The classification details of the text.
  */
  classification?: Classification;
  /**
   * The evaluate status.
  */
  status?: Status;
  /**
   * Personal Identifier Information details.
  */
  pII?: PII;
  /**
   * Language of the input text content.
  */
  language?: string;
  terms?: DetectedTerms[];
  /**
   * Unique Content Moderator transaction Id.
  */
  trackingId?: string;
}

/**
 * Coordinates to the found face.
*/
export interface Face {
  /**
   * The bottom coordinate.
  */
  bottom?: number;
  /**
   * The left coordinate.
  */
  left?: number;
  /**
   * The right coordinate.
  */
  right?: number;
  /**
   * The top coordinate.
  */
  top?: number;
}

/**
 * Request object the contains found faces.
*/
export interface FoundFaces {
  /**
   * The evaluate status
  */
  status?: Status;
  /**
   * The tracking id.
  */
  trackingId?: string;
  /**
   * The cache id.
  */
  cacheId?: string;
  /**
   * True if result was found.
  */
  result?: boolean;
  /**
   * Number of faces found.
  */
  count?: number;
  /**
   * The advanced info.
  */
  advancedInfo?: KeyValuePair[];
  /**
   * The list of faces.
  */
  faces?: Face[];
}

/**
 * OCR candidate text.
*/
export interface Candidate {
  /**
   * The text found.
  */
  text?: string;
  /**
   * The confidence level.
  */
  confidence?: number;
}

/**
 * Contains the text found in image for the language specified.
*/
export interface OCR {
  /**
   * The evaluate status
  */
  status?: Status;
  /**
   * Array of KeyValue.
  */
  metadata?: KeyValuePair[];
  /**
   * The tracking id.
  */
  trackingId?: string;
  /**
   * The cache id.
  */
  cacheId?: string;
  /**
   * The ISO 639-3 code.
  */
  language?: string;
  /**
   * The found text.
  */
  text?: string;
  /**
   * The list of candidate text.
  */
  candidates?: Candidate[];
}

/**
 * Evaluate response object.
*/
export interface Evaluate {
  /**
   * The cache id.
  */
  cacheID?: string;
  /**
   * Evaluate result.
  */
  result?: boolean;
  /**
   * The tracking id.
  */
  trackingId?: string;
  /**
   * The adult classification score.
  */
  adultClassificationScore?: number;
  /**
   * Indicates if an image is classified as adult.
  */
  isImageAdultClassified?: boolean;
  /**
   * The racy classification score.
  */
  racyClassificationScore?: number;
  /**
   * Indicates if the image is classified as racy.
  */
  isImageRacyClassified?: boolean;
  /**
   * The advanced info.
  */
  advancedInfo?: KeyValuePair[];
  /**
   * The evaluate status
  */
  status?: Status;
}

/**
 * The match details.
*/
export interface Match {
  /**
   * Confidence score of the image match.
  */
  score?: number;
  /**
   * The match id.
  */
  matchId?: number;
  /**
   * The source.
  */
  source?: string;
  /**
   * The tags for match details.
  */
  tags?: number[];
  /**
   * The label.
  */
  label?: string;
}

/**
 * The response for a Match request.
*/
export interface MatchResponse {
  /**
   * The tracking id.
  */
  trackingId?: string;
  /**
   * The cache id.
  */
  cacheID?: string;
  /**
   * Indicates if there is a match.
  */
  isMatch?: boolean;
  /**
   * The match details.
  */
  matches?: Match[];
  /**
   * The evaluate status
  */
  status?: Status;
}

/**
 * Detect language result.
*/
export interface DetectedLanguage {
  /**
   * The detected language.
  */
  detectedLanguage?: string;
  /**
   * The detect language status
  */
  status?: Status;
  /**
   * The tracking id.
  */
  trackingId?: string;
}

/**
 * Image List Properties.
*/
export interface ImageList {
  /**
   * Image List Id.
  */
  id?: number;
  /**
   * Image List Name.
  */
  name?: string;
  /**
   * Description for image list.
  */
  description?: string;
  /**
   * Image List Metadata.
  */
  metadata?: { [propertyName: string]: string };
}

/**
 * Term List  Properties.
*/
export interface TermList {
  /**
   * Term list Id.
  */
  id?: number;
  /**
   * Term list name.
  */
  name?: string;
  /**
   * Description for term list.
  */
  description?: string;
  /**
   * Term list metadata.
  */
  metadata?: { [propertyName: string]: string };
}

/**
 * Refresh Index Response.
*/
export interface RefreshIndex {
  /**
   * Content source Id.
  */
  contentSourceId?: string;
  /**
   * Update success status.
  */
  isUpdateSuccess?: boolean;
  /**
   * Advanced info list.
  */
  advancedInfo?: { [propertyName: string]: string }[];
  /**
   * Refresh index status.
  */
  status?: Status;
  /**
   * Tracking Id.
  */
  trackingId?: string;
}

export interface ImageAdditionalInfoItem {
  /**
   * Key parameter.
  */
  key?: string;
  /**
   * Value parameter.
  */
  value?: string;
}

/**
 * Image Properties.
*/
export interface Image {
  /**
   * Content Id.
  */
  contentId?: string;
  /**
   * Advanced info list.
  */
  additionalInfo?: ImageAdditionalInfoItem[];
  /**
   * Status details.
  */
  status?: Status;
  /**
   * Tracking Id.
  */
  trackingId?: string;
}

/**
 * Image Id properties.
*/
export interface ImageIds {
  /**
   * Source of the content.
  */
  contentSource?: string;
  /**
   * Id of the contents.
  */
  contentIds?: number[];
  /**
   * Get Image status.
  */
  status?: Status;
  /**
   * Tracking Id.
  */
  trackingId?: string;
}

/**
 * Terms in list Id passed.
*/
export interface TermsInList {
  /**
   * Added term details.
  */
  term?: string;
}

/**
 * All term Id response properties.
*/
export interface TermsData {
  /**
   * Language of the terms.
  */
  language?: string;
  /**
   * List of terms.
  */
  terms?: TermsInList[];
  /**
   * Term Status.
  */
  status?: Status;
  /**
   * Tracking Id.
  */
  trackingId?: string;
}

/**
 * Paging details.
*/
export interface TermsPaging {
  /**
   * Total details.
  */
  total?: number;
  /**
   * Limit details.
  */
  limit?: number;
  /**
   * Offset details.
  */
  offset?: number;
  /**
   * Returned text details.
  */
  returned?: number;
}

/**
 * Terms properties.
*/
export interface Terms {
  /**
   * Term data details.
  */
  data?: TermsData;
  /**
   * Paging details.
  */
  paging?: TermsPaging;
}

/**
 * The Review object.
*/
export interface Review {
  /**
   * Id of the review.
  */
  reviewId?: string;
  /**
   * Name of the subteam.
  */
  subTeam?: string;
  /**
   * The status string (<Pending, Complete>).
  */
  status?: string;
  /**
   * Array of KeyValue with Reviewer set Tags.
  */
  reviewerResultTags?: KeyValuePair[];
  /**
   * The reviewer name.
  */
  createdBy?: string;
  /**
   * Array of KeyValue.
  */
  metadata?: KeyValuePair[];
  /**
   * The type of content.
  */
  type?: string;
  /**
   * The content value.
  */
  content?: string;
  /**
   * Id of the content.
  */
  contentId?: string;
  /**
   * The callback endpoint.
  */
  callbackEndpoint?: string;
}

/**
 * Job Execution Report Values.
*/
export interface JobExecutionReportDetails {
  /**
   * Time details.
  */
  ts?: string;
  /**
   * Message details.
  */
  msg?: string;
}

/**
 * The Job object.
*/
export interface Job {
  /**
   * The job id.
  */
  id?: string;
  /**
   * The team name associated with the job.
  */
  teamName?: string;
  /**
   * The status string (<Pending, Failed, Completed>).
  */
  status?: string;
  /**
   * The Id of the workflow.
  */
  workflowId?: string;
  /**
   * Type of the content.
  */
  type?: string;
  /**
   * The callback endpoint.
  */
  callBackEndpoint?: string;
  /**
   * Review Id if one is created.
  */
  reviewId?: string;
  /**
   * Array of KeyValue pairs.
  */
  resultMetaData?: KeyValuePair[];
  /**
   * Job execution report- Array of KeyValue pairs object.
  */
  jobExecutionReport?: JobExecutionReportDetails[];
}

/**
 * The list of job ids.
*/
export interface JobListResult {
  /**
   * The job id.
  */
  value?: string[];
}

export interface JobId {
  /**
   * Id of the created job.
  */
  jobId?: string;
}

/**
 * Error body.
*/
export interface ErrorModel {
  code?: string;
  message?: string;
}

/**
 * Error information returned by the API
*/
export interface APIError {
  error?: ErrorModel;
}

export interface Body {
  /**
   * Name of the list.
  */
  name?: string;
  /**
   * Description of the list.
  */
  description?: string;
  /**
   * Metadata of the list.
  */
  metadata?: { [propertyName: string]: string };
}

export interface CreateReviewBodyItemMetadataItem {
  /**
   * Your key parameter.
  */
  key: string;
  /**
   * Your value parameter.
  */
  value: string;
}

/**
 * Schema items of the body.
*/
export interface CreateReviewBodyItem {
  /**
   * Type of the content. Possible values include: 'Image', 'Text'
  */
  type: string;
  /**
   * Content to review.
  */
  content: string;
  /**
   * Content Identifier.
  */
  contentId: string;
  /**
   * Optional CallbackEndpoint.
  */
  callbackEndpoint?: string;
  /**
   * Optional metadata details.
  */
  metadata?: CreateReviewBodyItemMetadataItem[];
}

export interface Content {
  /**
   * Content to evaluate for a job.
  */
  contentValue: string;
}

export interface TranscriptModerationBodyItemTermsItem {
  /**
   * Index of the word
  */
  index: number;
  /**
   * Detected word.
  */
  term: string;
}

/**
 * Schema items of the body.
*/
export interface TranscriptModerationBodyItem {
  /**
   * Timestamp of the image.
  */
  timestamp: string;
  /**
   * Optional metadata details.
  */
  terms: TranscriptModerationBodyItemTermsItem[];
}

export interface BodyModel {
  dataRepresentation?: string;
  value?: string;
}

export interface CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem {
  /**
   * Your key parameter.
  */
  key: string;
  /**
   * Your value parameter.
  */
  value: string;
}

export interface CreateVideoReviewsBodyItemVideoFramesItemMetadataItem {
  /**
   * Your key parameter.
  */
  key: string;
  /**
   * Your value parameter.
  */
  value: string;
}

export interface CreateVideoReviewsBodyItemVideoFramesItem {
  /**
   * Id of the frame.
  */
  id: string;
  /**
   * Timestamp of the frame.
  */
  timestamp: number;
  /**
   * Frame image Url.
  */
  frameImage: string;
  reviewerResultTags?: CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem[];
  /**
   * Optional metadata details.
  */
  metadata?: CreateVideoReviewsBodyItemVideoFramesItemMetadataItem[];
}

export interface CreateVideoReviewsBodyItemMetadataItem {
  /**
   * Your key parameter.
  */
  key: string;
  /**
   * Your value parameter.
  */
  value: string;
}

/**
 * Schema items of the body.
*/
export interface CreateVideoReviewsBodyItem {
  /**
   * Optional metadata details.
  */
  videoFrames?: CreateVideoReviewsBodyItemVideoFramesItem[];
  /**
   * Optional metadata details.
  */
  metadata?: CreateVideoReviewsBodyItemMetadataItem[];
  /**
   * Video content url to review.
  */
  content: string;
  /**
   * Content Identifier.
  */
  contentId: string;
  /**
   * Status of the video(Complete,Unpublished,Pending). Possible values include: 'Complete',
   * 'Unpublished', 'Pending'
  */
  status: string;
  /**
   * Timescale of the video.
  */
  timescale?: number;
  /**
   * Optional CallbackEndpoint.
  */
  callbackEndpoint?: string;
}

export interface VideoFrameBodyItemReviewerResultTagsItem {
  /**
   * Your key parameter.
  */
  key: string;
  /**
   * Your value parameter.
  */
  value: string;
}

export interface VideoFrameBodyItemMetadataItem {
  /**
   * Your key parameter.
  */
  key: string;
  /**
   * Your value parameter.
  */
  value: string;
}

/**
 * Schema items of the body.
*/
export interface VideoFrameBodyItem {
  /**
   * Timestamp of the frame.
  */
  timestamp: string;
  /**
   * Content to review.
  */
  frameImage: string;
  reviewerResultTags?: VideoFrameBodyItemReviewerResultTagsItem[];
  /**
   * Optional metadata details.
  */
  metadata?: VideoFrameBodyItemMetadataItem[];
}
